{"version":3,"file":"316.a093f318.js","mappings":";8LAEaA,GAA0BC,EAAAA,EAAAA,MAAK,kBAC1C,8BAA+BC,KAAK,SAACC,GAAM,MAAM,CAC/CC,QAASD,EAAOE,mBACjB,EAAE,GCHQC,GAAmBL,EAAAA,EAAAA,MAAK,kBACnC,8BAAwBC,KAAK,SAACC,GAAM,MAAM,CACxCC,QAASD,EAAOI,YACjB,EAAE,G,wCCYQC,GAAiBC,EAAAA,EAAAA,MAA0B,SAAAC,GAAoB,IAAjBC,EAAUD,EAAVC,WACnDC,GAAWC,EAAAA,EAAAA,KACjBC,GAAuCC,EAAAA,EAAAA,GACrC,SAACC,GAAK,OAAKA,EAAMC,QAAQ,GADnBC,EAAcJ,EAAdI,eAAgBC,EAAUL,EAAVK,WAGxBC,GAAmCL,EAAAA,EAAAA,GAAe,SAACC,GAAK,OAAKA,EAAMK,OAAO,GAAlEC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UACbC,GAAMC,EAAAA,EAAAA,MAAND,EAEFE,GAAeC,EAAAA,EAAAA,SAAQ,WAC3B,GAAIL,EACF,MAAO,GAAPM,OAAUJ,EAAE,0BAAyB,OAAAI,OAAMN,EAAW,KAGxD,GAAuB,QAAnBJ,EACF,OAAOM,EAAE,kBAEX,IAAMP,EAAWE,EAAWU,KAAK,SAACC,GAAG,OAAKA,EAAIC,KAAOb,CAAc,GACnE,OACSM,EADLP,EACO,cAADW,OAAeX,EAASe,OAEzB,iBACX,EAAG,CAACb,EAAYD,EAAgBI,EAAaE,IAEvCS,GAAoBC,EAAAA,EAAAA,aAAY,WACpCtB,EAASuB,EAAAA,EAAeC,cAC1B,EAAG,CAACxB,IAEEyB,GAAIC,EAAAA,EAAAA,GAAA,GC3CH,WD2C+B3B,GAEtC,OACE4B,EAAAA,EAAAA,MAAA,WAASC,UCzCJ,WDyC8BC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,UAAQC,UC3CL,WD2C8BC,SAAA,CAC9BlB,GACCmB,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAACC,MAAM,SAErBF,EAAAA,EAAAA,KAAA,MAAIF,UC7CL,WD6C6BC,SAAEf,IAG/BJ,IAAgBC,IACfmB,EAAAA,EAAAA,KAAA,UACEF,UCvDH,WDwDGK,QAASZ,EAAkBQ,SAE1BjB,EAAE,0BAINF,GAAeC,IACdmB,EAAAA,EAAAA,KAACI,EAAAA,GAAoB,CACnBN,UC/DH,WDgEGO,SAAO,IAIVxB,GACCmB,EAAAA,EAAAA,KAACM,EAAAA,GAA0B,CAACrC,WAAYA,KAExC+B,EAAAA,EAAAA,KAACrC,EAAkB,CAACM,WAAYA,QAIpC+B,EAAAA,EAAAA,KAAA,QAAMF,WAAWS,EAAAA,EAAAA,IC1Ed,WD0EyCZ,GAAMI,UAChDC,EAAAA,EAAAA,KAACnC,EAAW,CAACI,WAAYA,QAIjC,GAEAH,EAAe0C,YAAc,gB","sources":["webpack://test-task-foodstore/./src/widgets/CategoryNavigation/ui/CategoryNavigation.async.tsx","webpack://test-task-foodstore/./src/widgets/ProductGrid/ui/ProductGrid.async.tsx","webpack://test-task-foodstore/./src/widgets/ProductSection/ui/ProductSection.tsx","webpack://test-task-foodstore/./src/widgets/ProductSection/ui/ProductSection.module.scss"],"sourcesContent":["import { lazy } from 'react';\n\nexport const CategoryNavigationAsync = lazy(() =>\n  import('./CategoryNavigation').then((module) => ({\n    default: module.CategoryNavigation,\n  })),\n);\n","import { lazy } from 'react';\n\nexport const ProductGridAsync = lazy(() =>\n  import('./ProductGrid').then((module) => ({\n    default: module.ProductGrid,\n  })),\n);\n","import React, { memo, useMemo, useCallback } from 'react';\nimport { classNames, useTranslation } from '@/shared/lib';\nimport * as styles from './ProductSection.module.scss';\nimport { CategoryNavigation } from '@/widgets/CategoryNavigation';\nimport { ProductGrid } from '@/widgets/ProductGrid';\nimport { useAppSelector, useAppDispatch } from '@/app/store/hooks';\nimport { productActions } from '@/entities/product';\nimport {\n  TitleSkeleton,\n  ActionButtonSkeleton,\n  CategoryNavigationSkeleton,\n} from '@/shared/ui';\n\ninterface ProductSectionProps {\n  isCartOpen: boolean;\n}\n\nexport const ProductSection = memo<ProductSectionProps>(({ isCartOpen }) => {\n  const dispatch = useAppDispatch();\n  const { activeCategory, categories } = useAppSelector(\n    (state) => state.category,\n  );\n  const { searchQuery, isLoading } = useAppSelector((state) => state.product);\n  const { t } = useTranslation();\n\n  const sectionTitle = useMemo(() => {\n    if (searchQuery) {\n      return `${t('products.searchResults')}: \"${searchQuery}\"`;\n    }\n\n    if (activeCategory === 'all') {\n      return t('products.title');\n    }\n    const category = categories.find((cat) => cat.id === activeCategory);\n    if (category) {\n      return t(`navigation.${category.label}`);\n    }\n    return t('products.title');\n  }, [categories, activeCategory, searchQuery, t]);\n\n  const handleClearSearch = useCallback(() => {\n    dispatch(productActions.clearSearch());\n  }, [dispatch]);\n\n  const mods = { [styles['cart-open']]: isCartOpen };\n\n  return (\n    <section className={styles.section}>\n      <header className={styles.header}>\n        {isLoading ? (\n          <TitleSkeleton width=\"40%\" />\n        ) : (\n          <h2 className={styles.title}>{sectionTitle}</h2>\n        )}\n\n        {searchQuery && !isLoading && (\n          <button\n            className={styles['clear-search']}\n            onClick={handleClearSearch}\n          >\n            {t('products.clearSearch')}\n          </button>\n        )}\n\n        {searchQuery && isLoading && (\n          <ActionButtonSkeleton\n            className={styles['clear-search-skeleton']}\n            hasText\n          />\n        )}\n\n        {isLoading ? (\n          <CategoryNavigationSkeleton isCartOpen={isCartOpen} />\n        ) : (\n          <CategoryNavigation isCartOpen={isCartOpen} />\n        )}\n      </header>\n\n      <main className={classNames(styles.content, mods)}>\n        <ProductGrid isCartOpen={isCartOpen} />\n      </main>\n    </section>\n  );\n});\n\nProductSection.displayName = 'ProductSection';\n","// extracted by mini-css-extract-plugin\nvar _1 = \"s4ubEqWs\";\nvar _2 = \"cVCWcP9H\";\nvar _3 = \"JDEXhWWJ\";\nvar _4 = \"b_xrqm8c\";\nvar _5 = \"oQNsFZFJ\";\nvar _6 = \"qxSiAsIb\";\nvar _7 = \"lQVRdJny\";\nexport { _1 as \"cart-open\", _2 as \"clear-search\", _3 as \"clear-search-skeleton\", _4 as \"content\", _5 as \"header\", _6 as \"section\", _7 as \"title\" }\n"],"names":["CategoryNavigationAsync","lazy","then","module","default","CategoryNavigation","ProductGridAsync","ProductGrid","ProductSection","memo","_ref","isCartOpen","dispatch","useAppDispatch","_useAppSelector","useAppSelector","state","category","activeCategory","categories","_useAppSelector2","product","searchQuery","isLoading","t","useTranslation","sectionTitle","useMemo","concat","find","cat","id","label","handleClearSearch","useCallback","productActions","clearSearch","mods","_defineProperty","_jsxs","className","children","_jsx","TitleSkeleton","width","onClick","ActionButtonSkeleton","hasText","CategoryNavigationSkeleton","classNames","displayName"],"sourceRoot":""}