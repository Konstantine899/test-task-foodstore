import React, { memo, useCallback, useMemo } from 'react';
import * as styles from './CartSidebar.module.scss';
import { useAppSelector, useAppDispatch } from '@/app/store/hooks';
import { cartActions } from '@/entities/cart';

export const CartSidebar = memo(() => {
  const dispatch = useAppDispatch();
  const { total, isOpen } = useAppSelector((state) => state.cart);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const handleClose = useCallback(() => {
    dispatch(cartActions.closeCart());
  }, [dispatch]);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
  const formattedTotal = useMemo(() => `${total} ‚Ç∏`, [total]);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã
  const sidebarClasses = useMemo(() => 
    `${styles.sidebar} ${isOpen ? styles.open : ''}`, 
    [isOpen]
  );

  return (
    <aside 
      className={sidebarClasses}
      role="dialog"
      aria-modal="true"
      aria-labelledby="cart-title"
    >
        <header className={styles.header}>
          <h2 id="cart-title" className={styles.title}>
            –ú–æ–π –∑–∞–∫–∞–∑
          </h2>
          <button 
            className={styles.closeButton}
            onClick={handleClose}
            aria-label="–ó–∞–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
            type="button"
          >
            <span aria-hidden="true">√ó</span>
          </button>
        </header>
        
        <main className={styles.content}>
          {/* –í–∫–ª–∞–¥–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          <div className={styles.deliveryTabs}>
            <button className={`${styles.tab} ${styles.active}`}>–î–æ—Å—Ç–∞–≤–∫–∞</button>
            <button className={styles.tab}>–°–∞–º–æ–≤—ã–≤–æ–∑</button>
          </div>
          
          {/* –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          <div className={styles.address}>
            <span className={styles.locationIcon}>üìç</span>
            <span>—É–ª–∏—Ü–∞ –í–ª–∞–¥–∏–º–∏—Ä–∞ –†–∞–¥–æ—Å—Ç–æ–≤—Ü...</span>
          </div>
          
          {/* –¢–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ */}
          <div className={styles.items}>
            <div className={styles.item}>
              <div className={styles.itemInfo}>
                <h4>–°–µ—Ç ¬´–ê–ª–º–∞—Ç—ã¬ª - 40 —à—Ç</h4>
                <div className={styles.itemPrice}>13500 ‚Ç∏</div>
              </div>
              <div className={styles.quantityControls}>
                <button className={styles.quantityBtn}>-</button>
                <span className={styles.quantity}>1</span>
                <button className={styles.quantityBtn}>+</button>
              </div>
            </div>
          </div>
          
          {/* –ü—Ä–æ–º–æ–∫–æ–¥ */}
          <div className={styles.promoCode}>
            <label>–ü—Ä–æ–º–æ–∫–æ–¥</label>
            <input type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥" />
          </div>
        </main>
        
        <footer className={styles.footer}>
          <div className={styles.orderDetails}>
            <div className={styles.detailRow}>
              <span>–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ 1 —à—Ç.</span>
              <span>13500 ‚Ç∏</span>
            </div>
            <div className={styles.detailRow}>
              <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
              <span>1000 ‚Ç∏</span>
            </div>
          </div>
          <div className={styles.total}>
            <span className={styles.totalLabel}>–ò—Ç–æ–≥–æ:</span>
            <span className={styles.totalPrice}>{formattedTotal}</span>
          </div>
        </footer>
    </aside>
  );
});

CartSidebar.displayName = 'CartSidebar';